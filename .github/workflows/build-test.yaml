name: Build Test

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]

permissions:
  actions: read
  checks: read
  contents: write
  deployments: read
  issues: write
  discussions: read
  packages: write
  pull-requests: write
  repository-projects: write
  security-events: read
  statuses: write

jobs:
  build-test:
    strategy:
      matrix:
        node-version: [16.x]
        platform: [ubuntu-latest]

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v2

      - name: Make envfile for production
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_NODE_ENV: production
          envkey_REDIS_DATABASE: ${{ secrets.REDIS_DATABASE_PROD }}
          envkey_NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL_PROD }}
          envkey_POSTGRES_DATABASE_NAME: ${{ secrets.POSTGRES_DATABASE_NAME_PROD }}
          envkey_PORT_NEST: ${{ secrets.PORT_NEST }}
          envkey_POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          envkey_POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          envkey_REDIS_HOST: ${{ secrets.REDIS_HOST }}
          envkey_REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          envkey_REDIS_PORT: ${{ secrets.REDIS_PORT }}
          envkey_REDIS_USER: ${{ secrets.REDIS_USER }}
          envkey_OMISE_PUBLIC_KEY: ${{ secrets.OMISE_PUBLIC_KEY }}
          envkey_OMISE_SECRET_KEY: ${{ secrets.OMISE_SECRET_KEY }}
          file_name: .env.prod
          fail_on_empty: false

      - name: Make envfile for production
        if: ${{ github.ref == 'refs/heads/dev' }}
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_NODE_ENV: production
          envkey_REDIS_DATABASE: ${{ secrets.REDIS_DATABASE_DEV }}
          envkey_NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL_DEV }}
          envkey_POSTGRES_DATABASE_NAME: ${{ secrets.POSTGRES_DATABASE_NAME_DEV }}
          envkey_PORT_NEST: ${{ secrets.PORT_NEST }}
          envkey_POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          envkey_POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          envkey_REDIS_HOST: ${{ secrets.REDIS_HOST }}
          envkey_REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          envkey_REDIS_PORT: ${{ secrets.REDIS_PORT }}
          envkey_REDIS_USER: ${{ secrets.REDIS_USER }}
          envkey_OMISE_PUBLIC_KEY: ${{ secrets.OMISE_PUBLIC_KEY }}
          envkey_OMISE_SECRET_KEY: ${{ secrets.OMISE_SECRET_KEY }}
          file_name: .env.dev
          fail_on_empty: false

      - name: Set prod env
        if: ${{ github.ref == 'refs/heads/main' }}
        run: mv .env.prod .env

      - name: Set dev env
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: mv .env.dev .env

      - name: Get yarn cache
        uses: c-hive/gha-yarn-cache@v2

      - name: Install dependencies
        run: yarn --prefer-offline --frozen-lockfile

      - name: Build the projects
        run: yarn build

      - name: Build the storybook of the project
        run: yarn build:storybook
